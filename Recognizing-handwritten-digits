{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Recognizing-handwritten-digits","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyNU1Q8/YuO1uBPD1WeCxDdQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#CLASSIFICATION: RECOGNIZING HANDWRITTEN DIGITS"],"metadata":{"id":"RdgwnD-r7pqq"}},{"cell_type":"markdown","source":["Description\n","--------------------------------------------------\n","\n","**Data Set Characteristics:**\n","\n","    :Number of Instances: 1797\n","    :Number of Attributes: 64\n","    :Attribute Information: 8x8 image of integer pixels in the range 0..16.\n","    :Missing Attribute Values: None\n","    :Creator: E. Alpaydin (alpaydin '@' boun.edu.tr)\n","    :Date: July; 1998\n","\n","This is a copy of the test set of the UCI ML hand-written digits datasets\n","https://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits\n","\n","The data set contains images of hand-written digits: 10 classes where\n","each class refers to a digit.\n","\n","Preprocessing programs made available by NIST were used to extract\n","normalized bitmaps of handwritten digits from a preprinted form. From a\n","total of 43 people, 30 contributed to the training set and different 13\n","to the test set. 32x32 bitmaps are divided into nonoverlapping blocks of\n","4x4 and the number of on pixels are counted in each block. This generates\n","an input matrix of 8x8 where each element is an integer in the range\n","0..16. This reduces dimensionality and gives invariance to small\n","distortions.\n","\n","For info on NIST preprocessing routines, see M. D. Garris, J. L. Blue, G.\n","T. Candela, D. L. Dimmick, J. Geist, P. J. Grother, S. A. Janet, and C.\n","L. Wilson, NIST Form-Based Handprint Recognition System, NISTIR 5469,\n","1994.\n","\n",".. topic:: References\n","\n","  - C. Kaynak (1995) Methods of Combining Multiple Classifiers and Their\n","    Applications to Handwritten Digit Recognition, MSc Thesis, Institute of\n","    Graduate Studies in Science and Engineering, Bogazici University.\n","  - E. Alpaydin, C. Kaynak (1998) Cascading Classifiers, Kybernetika.\n","  - Ken Tang and Ponnuthurai N. Suganthan and Xi Yao and A. Kai Qin.\n","    Linear dimensionalityreduction using relevance weighted LDA. School of\n","    Electrical and Electronic Engineering Nanyang Technological University.\n","    2005.\n","  - Claudio Gentile. A New Approximate Maximal Margin Classification\n","    Algorithm. NIPS. 2000."],"metadata":{"id":"mkwQT_K_9F5U"}},{"cell_type":"markdown","source":["#Import Library and Upload File"],"metadata":{"id":"Vpkelayx38w1"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"6LK3prbn5nxT","executionInfo":{"status":"ok","timestamp":1646189859601,"user_tz":-480,"elapsed":684,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"outputs":[],"source":["from sklearn import datasets\n","import pandas as pd\n","import matplotlib\n","from matplotlib import pyplot as plt\n","%matplotlib inline \n","import numpy as np\n","import seaborn as sns\n","np.random.seed(42)\n","\n","#Model\n","#import collections\n","#from tqdm import tqdm\n","import matplotlib.pyplot as plt\n","#from sklearn import utils\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.naive_bayes import GaussianNB, MultinomialNB\n","from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier\n","from sklearn import svm\n","from sklearn.svm import LinearSVC\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n","from sklearn.model_selection import train_test_split, cross_val_score, KFold, cross_val_predict, StratifiedShuffleSplit\n","from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score\n","from sklearn.metrics import classification_report, confusion_matrix\n","#from sklearn.preprocessing import StandardScaler, MinMaxScaler\n","#import gensim\n","#import multiprocessing"]},{"cell_type":"markdown","source":["#1.1 Data Exploration"],"metadata":{"id":"BZsDxd5B5IkO"}},{"cell_type":"code","source":["digits = datasets.load_digits()\n","list(digits.keys())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"24_MfBSN5uwX","executionInfo":{"status":"ok","timestamp":1646189859603,"user_tz":-480,"elapsed":93,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"d202836a-f58f-4aa7-8078-0b41550a5946"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['data', 'target', 'frame', 'feature_names', 'target_names', 'images', 'DESCR']"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["The digits dataset consists of 8x8 pixel images of digits. The *images* attribute of the dataset stores 8x8 arrays of grayscale values for each image. "],"metadata":{"id":"KE9jTMr064Th"}},{"cell_type":"markdown","source":["Meanwhile, *data* attribute is the flat array of 64-pixel values so that each pixel corresponds to a column for the classifier. "],"metadata":{"id":"p4SfAkCoiu1y"}},{"cell_type":"code","source":["digits"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MpEIJfyb__0r","executionInfo":{"status":"ok","timestamp":1646189859605,"user_tz":-480,"elapsed":89,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"c209454b-1751-47d5-cfa6-7b4493a1f6f3"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'DESCR': \".. _digits_dataset:\\n\\nOptical recognition of handwritten digits dataset\\n--------------------------------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 1797\\n    :Number of Attributes: 64\\n    :Attribute Information: 8x8 image of integer pixels in the range 0..16.\\n    :Missing Attribute Values: None\\n    :Creator: E. Alpaydin (alpaydin '@' boun.edu.tr)\\n    :Date: July; 1998\\n\\nThis is a copy of the test set of the UCI ML hand-written digits datasets\\nhttps://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits\\n\\nThe data set contains images of hand-written digits: 10 classes where\\neach class refers to a digit.\\n\\nPreprocessing programs made available by NIST were used to extract\\nnormalized bitmaps of handwritten digits from a preprinted form. From a\\ntotal of 43 people, 30 contributed to the training set and different 13\\nto the test set. 32x32 bitmaps are divided into nonoverlapping blocks of\\n4x4 and the number of on pixels are counted in each block. This generates\\nan input matrix of 8x8 where each element is an integer in the range\\n0..16. This reduces dimensionality and gives invariance to small\\ndistortions.\\n\\nFor info on NIST preprocessing routines, see M. D. Garris, J. L. Blue, G.\\nT. Candela, D. L. Dimmick, J. Geist, P. J. Grother, S. A. Janet, and C.\\nL. Wilson, NIST Form-Based Handprint Recognition System, NISTIR 5469,\\n1994.\\n\\n.. topic:: References\\n\\n  - C. Kaynak (1995) Methods of Combining Multiple Classifiers and Their\\n    Applications to Handwritten Digit Recognition, MSc Thesis, Institute of\\n    Graduate Studies in Science and Engineering, Bogazici University.\\n  - E. Alpaydin, C. Kaynak (1998) Cascading Classifiers, Kybernetika.\\n  - Ken Tang and Ponnuthurai N. Suganthan and Xi Yao and A. Kai Qin.\\n    Linear dimensionalityreduction using relevance weighted LDA. School of\\n    Electrical and Electronic Engineering Nanyang Technological University.\\n    2005.\\n  - Claudio Gentile. A New Approximate Maximal Margin Classification\\n    Algorithm. NIPS. 2000.\\n\",\n"," 'data': array([[ 0.,  0.,  5., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ..., 10.,  0.,  0.],\n","        [ 0.,  0.,  0., ..., 16.,  9.,  0.],\n","        ...,\n","        [ 0.,  0.,  1., ...,  6.,  0.,  0.],\n","        [ 0.,  0.,  2., ..., 12.,  0.,  0.],\n","        [ 0.,  0., 10., ..., 12.,  1.,  0.]]),\n"," 'feature_names': ['pixel_0_0',\n","  'pixel_0_1',\n","  'pixel_0_2',\n","  'pixel_0_3',\n","  'pixel_0_4',\n","  'pixel_0_5',\n","  'pixel_0_6',\n","  'pixel_0_7',\n","  'pixel_1_0',\n","  'pixel_1_1',\n","  'pixel_1_2',\n","  'pixel_1_3',\n","  'pixel_1_4',\n","  'pixel_1_5',\n","  'pixel_1_6',\n","  'pixel_1_7',\n","  'pixel_2_0',\n","  'pixel_2_1',\n","  'pixel_2_2',\n","  'pixel_2_3',\n","  'pixel_2_4',\n","  'pixel_2_5',\n","  'pixel_2_6',\n","  'pixel_2_7',\n","  'pixel_3_0',\n","  'pixel_3_1',\n","  'pixel_3_2',\n","  'pixel_3_3',\n","  'pixel_3_4',\n","  'pixel_3_5',\n","  'pixel_3_6',\n","  'pixel_3_7',\n","  'pixel_4_0',\n","  'pixel_4_1',\n","  'pixel_4_2',\n","  'pixel_4_3',\n","  'pixel_4_4',\n","  'pixel_4_5',\n","  'pixel_4_6',\n","  'pixel_4_7',\n","  'pixel_5_0',\n","  'pixel_5_1',\n","  'pixel_5_2',\n","  'pixel_5_3',\n","  'pixel_5_4',\n","  'pixel_5_5',\n","  'pixel_5_6',\n","  'pixel_5_7',\n","  'pixel_6_0',\n","  'pixel_6_1',\n","  'pixel_6_2',\n","  'pixel_6_3',\n","  'pixel_6_4',\n","  'pixel_6_5',\n","  'pixel_6_6',\n","  'pixel_6_7',\n","  'pixel_7_0',\n","  'pixel_7_1',\n","  'pixel_7_2',\n","  'pixel_7_3',\n","  'pixel_7_4',\n","  'pixel_7_5',\n","  'pixel_7_6',\n","  'pixel_7_7'],\n"," 'frame': None,\n"," 'images': array([[[ 0.,  0.,  5., ...,  1.,  0.,  0.],\n","         [ 0.,  0., 13., ..., 15.,  5.,  0.],\n","         [ 0.,  3., 15., ..., 11.,  8.,  0.],\n","         ...,\n","         [ 0.,  4., 11., ..., 12.,  7.,  0.],\n","         [ 0.,  2., 14., ..., 12.,  0.,  0.],\n","         [ 0.,  0.,  6., ...,  0.,  0.,  0.]],\n"," \n","        [[ 0.,  0.,  0., ...,  5.,  0.,  0.],\n","         [ 0.,  0.,  0., ...,  9.,  0.,  0.],\n","         [ 0.,  0.,  3., ...,  6.,  0.,  0.],\n","         ...,\n","         [ 0.,  0.,  1., ...,  6.,  0.,  0.],\n","         [ 0.,  0.,  1., ...,  6.,  0.,  0.],\n","         [ 0.,  0.,  0., ..., 10.,  0.,  0.]],\n"," \n","        [[ 0.,  0.,  0., ..., 12.,  0.,  0.],\n","         [ 0.,  0.,  3., ..., 14.,  0.,  0.],\n","         [ 0.,  0.,  8., ..., 16.,  0.,  0.],\n","         ...,\n","         [ 0.,  9., 16., ...,  0.,  0.,  0.],\n","         [ 0.,  3., 13., ..., 11.,  5.,  0.],\n","         [ 0.,  0.,  0., ..., 16.,  9.,  0.]],\n"," \n","        ...,\n"," \n","        [[ 0.,  0.,  1., ...,  1.,  0.,  0.],\n","         [ 0.,  0., 13., ...,  2.,  1.,  0.],\n","         [ 0.,  0., 16., ..., 16.,  5.,  0.],\n","         ...,\n","         [ 0.,  0., 16., ..., 15.,  0.,  0.],\n","         [ 0.,  0., 15., ..., 16.,  0.,  0.],\n","         [ 0.,  0.,  2., ...,  6.,  0.,  0.]],\n"," \n","        [[ 0.,  0.,  2., ...,  0.,  0.,  0.],\n","         [ 0.,  0., 14., ..., 15.,  1.,  0.],\n","         [ 0.,  4., 16., ..., 16.,  7.,  0.],\n","         ...,\n","         [ 0.,  0.,  0., ..., 16.,  2.,  0.],\n","         [ 0.,  0.,  4., ..., 16.,  2.,  0.],\n","         [ 0.,  0.,  5., ..., 12.,  0.,  0.]],\n"," \n","        [[ 0.,  0., 10., ...,  1.,  0.,  0.],\n","         [ 0.,  2., 16., ...,  1.,  0.,  0.],\n","         [ 0.,  0., 15., ..., 15.,  0.,  0.],\n","         ...,\n","         [ 0.,  4., 16., ..., 16.,  6.,  0.],\n","         [ 0.,  8., 16., ..., 16.,  8.,  0.],\n","         [ 0.,  1.,  8., ..., 12.,  1.,  0.]]]),\n"," 'target': array([0, 1, 2, ..., 8, 9, 8]),\n"," 'target_names': array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])}"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["_, axes = plt.subplots(nrows=1, ncols=4, figsize=(10, 3))\n","for ax, image, label in zip(axes, digits.images, digits.target):\n","    ax.set_axis_off()\n","    ax.imshow(image, cmap=plt.cm.gray_r, interpolation=\"nearest\")\n","    ax.set_title(\"Training: %i\" % label)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":168},"id":"boaI4j0I5vw-","executionInfo":{"status":"ok","timestamp":1646189859606,"user_tz":-480,"elapsed":79,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"d36a1dc0-acdb-4b94-f3ba-b3588646ec38"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x216 with 4 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","execution_count":5,"metadata":{"id":"StIxVGZK5iql","outputId":"e76c861c-0eba-4461-da28-dcf695f5d3cd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646189859608,"user_tz":-480,"elapsed":76,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1797, 64)"]},"metadata":{},"execution_count":5}],"source":["X, y = digits[\"data\"], digits[\"target\"]\n","X.shape"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"Eztz2uBi5iqm","outputId":"9bf6667d-6e06-4ec9-8c53-43dafc16555f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646189859609,"user_tz":-480,"elapsed":61,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1797,)"]},"metadata":{},"execution_count":6}],"source":["y.shape"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"UPx7xm405iqm","outputId":"4b5f38a6-ffc6-4ada-8425-7214e67f8974","colab":{"base_uri":"https://localhost:8080/","height":248},"executionInfo":{"status":"ok","timestamp":1646189859610,"user_tz":-480,"elapsed":53,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAOcAAADnCAYAAADl9EEgAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAADiElEQVR4nO3dQXEiUQBF0WZqBLSExgES4iBIQAIOKBxgIQ4iIRbiIChAAmOACpupzw05Z9m9eL3g1q9i81fX63UCev48+gOA28QJUeKEKHFClDgh6u+d9/7K/WGWZRm2td/vn3LrAVa3Hjo5IUqcECVOiBInRIkTosQJUeKEKHFClDghSpwQJU6IEidEiROixAlR4oQocUKUOCFKnBAlTogSJ0SJE6LECVHihChxQpQ4IUqcEHXvOgb+g81mM2zrfD4P2/r6+hq29Rs5OSFKnBAlTogSJ0SJE6LECVHihChxQpQ4IUqcECVOiBInRIkTosQJUeKEKHFClDghSpwQJU6IEidEiROixAlR4oQocUKUOCFKnBD1K69j2O12Q/c+Pz+H7o2yLMujP+GpOTkhSpwQJU6IEidEiROixAlR4oQocUKUOCFKnBAlTogSJ0SJE6LECVHihChxQpQ4IUqcECVOiBInRIkTosQJUeKEKHFClDghSpwQJU6IytyVcjqdhm29vb0N25qmaTocDsO2jsfjsK3tdjts6zdyckKUOCFKnBAlTogSJ0SJE6LECVHihChxQpQ4IUqcECVOiBInRIkTosQJUeKEKHFClDghSpwQJU6IEidEiROixAlR4oQocUKUOCEqcx3DbrcbtrVer4dtTdM0XS6XoXujfHx8DNsa+fuocHJClDghSpwQJU6IEidEiROixAlR4oQocUKUOCFKnBAlTogSJ0SJE6LECVHihChxQpQ4IUqcECVOiBInRIkTosQJUeKEKHFClDghKnMdwzzPw7ZeX1+HbU3T2GsLeB5OTogSJ0SJE6LECVHihChxQpQ4IUqcECVOiBInRIkTosQJUeKEKHFClDghSpwQJU6IEidEiROixAlR4oQocUKUOCFKnBAlTogSJ0RlrmN4ZsuyPPoT+IGcnBAlTogSJ0SJE6LECVHihChxQpQ4IUqcECVOiBInRIkTosQJUeKEKHFClDghSpwQJU6IEidEiROixAlR4oQocUKUOCFKnBAlTogSJ0Strtfrd++/fUnPy8vLsK15nodtvb+/D9t6gNWth05OiBInRIkTosQJUeKEKHFClDghSpwQJU6IEidEiROixAlR4oQocUKUOCFKnBAlTogSJ0SJE6LECVHihChxQpQ4IUqcECVOiBInRN27jgF4ECcnRIkTosQJUeKEKHFClDgh6h+vxC+HbrBsHAAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["some_digit = X[70]\n","some_digit_image = some_digit.reshape(8, 8)\n","\n","plt.imshow(some_digit_image, cmap=matplotlib.cm.binary, interpolation=\"nearest\")\n","plt.axis(\"off\")\n","plt.show()"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"oMuIbfC85iqo","outputId":"289836bf-3cf1-4e4d-bdf8-2e4e7008ab06","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646189859611,"user_tz":-480,"elapsed":52,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":8}],"source":["y[70]"]},{"cell_type":"markdown","metadata":{"id":"HnVexNLH5iqp"},"source":["#1.2 Data Preparation"]},{"cell_type":"code","source":["feature = digits.data\n","label = digits.target\n","\n","x_train, x_test, y_train, y_test = train_test_split(feature, label, test_size=0.2, random_state=1, shuffle=True)\n","\n","print(len(x_train), \"training instances +\", len(x_test), \"test instances\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mcum7Ye4_h3y","executionInfo":{"status":"ok","timestamp":1646189859612,"user_tz":-480,"elapsed":44,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"c84f5ff7-448c-4715-c3e6-5cad9ea644b7"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["1437 training instances + 360 test instances\n"]}]},{"cell_type":"code","execution_count":10,"metadata":{"id":"7v5R6Bhn5iqr","outputId":"069a3472-e28a-45b0-fe90-1617a6bc47e6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646189859612,"user_tz":-480,"elapsed":35,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["StratifiedShuffleSplit(n_splits=1, random_state=42, test_size=0.2,\n","            train_size=None)\n","TRAIN: 1437 TEST: 360\n","(1437, 64) (1437,) (360, 64) (360,)\n"]}],"source":["split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\n","split.get_n_splits(X, y)\n","print(split)       \n","\n","for train_index, test_index in split.split(X, y):\n","    print(\"TRAIN:\", len(train_index), \"TEST:\", len(test_index))\n","    X_train, X_test = X[train_index], X[test_index]\n","    Y_train, Y_test = y[train_index], y[test_index]\n","\n","print(X_train.shape, Y_train.shape, X_test.shape, Y_test.shape)"]},{"cell_type":"markdown","metadata":{"id":"ma8EajCm5iqt"},"source":["#1.3 Data Modelling"]},{"cell_type":"code","source":["def show_percentage(x):\n","  return \"{0:.2f}\".format(round(x, 2) * 100)\n","\n","def run_ML(xtrain, ytrain, xtest, ytest):\n","\n","    model_dict = {\n","      'GradientBoostingClassifier': GradientBoostingClassifier(n_estimators=100),\n","      'RandomForestClassifier': RandomForestClassifier(n_estimators=100, random_state=0),\n","      'NaiveBayes': GaussianNB(),\n","      'NeuralNetwork': MLPClassifier(solver='adam', hidden_layer_sizes=(10,5), random_state=2, activation='relu', max_iter=5000, learning_rate='invscaling'),\n","      'SupportVector': svm.SVC(C=1.0, kernel='rbf', degree=3, gamma='scale', coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=2000, decision_function_shape='ovr', random_state=2),\n","      'LinearSVC': LinearSVC(penalty='l2', loss='squared_hinge', dual=True, tol=0.001, C=1.0, multi_class='ovr', fit_intercept=True, intercept_scaling=1, class_weight=None, verbose=0, random_state=None, max_iter=30000),\n","      'LogisticRegression': LogisticRegression(random_state=42, max_iter=8000, multi_class='auto', solver='saga'),\n","    }    \n","  \n","  #index_list = ['GradientBoostingClassifier', 'NaiveBayes', 'NeuralNetwork', 'RandomForestClassifier', 'SupportVector', 'LinearSVC', 'LogisticRegression']\n","    cols = ['Accuracy', 'F1', 'Precision', 'Recall']\n","    df_report = pd.DataFrame(columns=cols)        \n","                           \n","    for name, algo in model_dict.items():\n","      algo.fit(xtrain, ytrain) \n","      pred = algo.predict(xtest)\n","\n","      print(\n","    f\"Classification report for classifier {name}:\\n\"\n","    f\"{classification_report(y_test, pred)}\\n\")\n","\n","      \n","      df_report.loc[name, 'Accuracy'] = show_percentage(accuracy_score(ytest, pred))\n","      df_report.loc[name, 'F1'] = show_percentage(f1_score(ytest, pred, average='macro'))\n","      df_report.loc[name, 'Precision'] = show_percentage(precision_score(ytest, pred, average='macro'))\n","      df_report.loc[name, 'Recall'] = show_percentage(recall_score(ytest, pred, average='macro'))\n","    \n","    cols = ['Accuracy', 'F1', 'Precision', 'Recall']\n","    df_report = df_report.reindex(columns=cols)\n","      \n","    return df_report.sort_values('F1', ascending=False) "],"metadata":{"id":"oLs7AHDA54ZK","executionInfo":{"status":"ok","timestamp":1646189859613,"user_tz":-480,"elapsed":28,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["run_ML(x_train, y_train, x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"nEdbXCyFCxg5","executionInfo":{"status":"ok","timestamp":1646189888364,"user_tz":-480,"elapsed":28777,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"de1341f3-cef6-45e3-a025-fae9ffdaf2ce"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report for classifier GradientBoostingClassifier:\n","              precision    recall  f1-score   support\n","\n","           0       0.98      0.95      0.96        43\n","           1       0.97      1.00      0.99        35\n","           2       1.00      0.97      0.99        36\n","           3       1.00      0.93      0.96        41\n","           4       0.97      0.97      0.97        38\n","           5       0.97      0.97      0.97        30\n","           6       1.00      0.97      0.99        37\n","           7       0.97      0.95      0.96        37\n","           8       0.80      0.97      0.88        29\n","           9       0.91      0.91      0.91        34\n","\n","    accuracy                           0.96       360\n","   macro avg       0.96      0.96      0.96       360\n","weighted avg       0.96      0.96      0.96       360\n","\n","\n","Classification report for classifier RandomForestClassifier:\n","              precision    recall  f1-score   support\n","\n","           0       1.00      0.98      0.99        43\n","           1       1.00      1.00      1.00        35\n","           2       1.00      1.00      1.00        36\n","           3       1.00      0.98      0.99        41\n","           4       0.97      1.00      0.99        38\n","           5       0.94      1.00      0.97        30\n","           6       1.00      1.00      1.00        37\n","           7       1.00      0.97      0.99        37\n","           8       1.00      0.93      0.96        29\n","           9       0.92      0.97      0.94        34\n","\n","    accuracy                           0.98       360\n","   macro avg       0.98      0.98      0.98       360\n","weighted avg       0.98      0.98      0.98       360\n","\n","\n","Classification report for classifier NaiveBayes:\n","              precision    recall  f1-score   support\n","\n","           0       0.98      0.95      0.96        43\n","           1       0.83      0.83      0.83        35\n","           2       0.96      0.64      0.77        36\n","           3       0.91      0.78      0.84        41\n","           4       0.92      0.92      0.92        38\n","           5       0.89      0.83      0.86        30\n","           6       0.97      1.00      0.99        37\n","           7       0.79      1.00      0.88        37\n","           8       0.53      0.97      0.68        29\n","           9       1.00      0.59      0.74        34\n","\n","    accuracy                           0.85       360\n","   macro avg       0.88      0.85      0.85       360\n","weighted avg       0.89      0.85      0.85       360\n","\n","\n","Classification report for classifier NeuralNetwork:\n","              precision    recall  f1-score   support\n","\n","           0       1.00      0.93      0.96        43\n","           1       0.89      0.91      0.90        35\n","           2       0.94      0.89      0.91        36\n","           3       0.93      0.90      0.91        41\n","           4       1.00      0.84      0.91        38\n","           5       0.79      0.87      0.83        30\n","           6       0.93      1.00      0.96        37\n","           7       0.94      0.89      0.92        37\n","           8       0.79      0.79      0.79        29\n","           9       0.73      0.88      0.80        34\n","\n","    accuracy                           0.89       360\n","   macro avg       0.89      0.89      0.89       360\n","weighted avg       0.90      0.89      0.90       360\n","\n","\n","Classification report for classifier SupportVector:\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        43\n","           1       1.00      1.00      1.00        35\n","           2       1.00      1.00      1.00        36\n","           3       1.00      1.00      1.00        41\n","           4       1.00      1.00      1.00        38\n","           5       0.97      1.00      0.98        30\n","           6       1.00      1.00      1.00        37\n","           7       1.00      0.97      0.99        37\n","           8       1.00      0.97      0.98        29\n","           9       0.94      0.97      0.96        34\n","\n","    accuracy                           0.99       360\n","   macro avg       0.99      0.99      0.99       360\n","weighted avg       0.99      0.99      0.99       360\n","\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  ConvergenceWarning,\n"]},{"output_type":"stream","name":"stdout","text":["Classification report for classifier LinearSVC:\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        43\n","           1       0.94      0.89      0.91        35\n","           2       1.00      0.92      0.96        36\n","           3       0.93      0.90      0.91        41\n","           4       1.00      0.97      0.99        38\n","           5       0.93      0.93      0.93        30\n","           6       1.00      0.97      0.99        37\n","           7       0.97      0.97      0.97        37\n","           8       0.87      0.93      0.90        29\n","           9       0.80      0.94      0.86        34\n","\n","    accuracy                           0.94       360\n","   macro avg       0.94      0.94      0.94       360\n","weighted avg       0.95      0.94      0.95       360\n","\n","\n","Classification report for classifier LogisticRegression:\n","              precision    recall  f1-score   support\n","\n","           0       1.00      0.98      0.99        43\n","           1       0.97      0.97      0.97        35\n","           2       1.00      1.00      1.00        36\n","           3       0.98      0.98      0.98        41\n","           4       0.93      1.00      0.96        38\n","           5       0.90      0.93      0.92        30\n","           6       1.00      1.00      1.00        37\n","           7       1.00      0.95      0.97        37\n","           8       0.97      0.97      0.97        29\n","           9       1.00      0.97      0.99        34\n","\n","    accuracy                           0.97       360\n","   macro avg       0.97      0.97      0.97       360\n","weighted avg       0.98      0.97      0.98       360\n","\n","\n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-6868ffb9-ec96-4e1e-b743-826d9551c912\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>SupportVector</th>\n","      <td>99.00</td>\n","      <td>99.00</td>\n","      <td>99.00</td>\n","      <td>99.00</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestClassifier</th>\n","      <td>98.00</td>\n","      <td>98.00</td>\n","      <td>98.00</td>\n","      <td>98.00</td>\n","    </tr>\n","    <tr>\n","      <th>LogisticRegression</th>\n","      <td>98.00</td>\n","      <td>97.00</td>\n","      <td>97.00</td>\n","      <td>97.00</td>\n","    </tr>\n","    <tr>\n","      <th>GradientBoostingClassifier</th>\n","      <td>96.00</td>\n","      <td>96.00</td>\n","      <td>96.00</td>\n","      <td>96.00</td>\n","    </tr>\n","    <tr>\n","      <th>LinearSVC</th>\n","      <td>94.00</td>\n","      <td>94.00</td>\n","      <td>94.00</td>\n","      <td>94.00</td>\n","    </tr>\n","    <tr>\n","      <th>NeuralNetwork</th>\n","      <td>89.00</td>\n","      <td>89.00</td>\n","      <td>89.00</td>\n","      <td>89.00</td>\n","    </tr>\n","    <tr>\n","      <th>NaiveBayes</th>\n","      <td>85.00</td>\n","      <td>85.00</td>\n","      <td>88.00</td>\n","      <td>85.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6868ffb9-ec96-4e1e-b743-826d9551c912')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6868ffb9-ec96-4e1e-b743-826d9551c912 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6868ffb9-ec96-4e1e-b743-826d9551c912');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                           Accuracy     F1 Precision Recall\n","SupportVector                 99.00  99.00     99.00  99.00\n","RandomForestClassifier        98.00  98.00     98.00  98.00\n","LogisticRegression            98.00  97.00     97.00  97.00\n","GradientBoostingClassifier    96.00  96.00     96.00  96.00\n","LinearSVC                     94.00  94.00     94.00  94.00\n","NeuralNetwork                 89.00  89.00     89.00  89.00\n","NaiveBayes                    85.00  85.00     88.00  85.00"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["#1.4 Best Model"],"metadata":{"id":"5oEBsMUlfEbT"}},{"cell_type":"markdown","source":["Since Support Vector Machine is the best model among all, it will be used for visualisation purpose."],"metadata":{"id":"14r4TgFQeMbS"}},{"cell_type":"code","source":["svc = svm.SVC(gamma=0.001, C=100.)\n","svc.fit(x_train, y_train)\n","y_pred = svc.predict(x_test)"],"metadata":{"id":"_bLbEIvycQHD","executionInfo":{"status":"ok","timestamp":1646189888367,"user_tz":-480,"elapsed":24,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["images_and_predictions = list(zip(x_test,y_pred))\n","\n","plt.figure(figsize=(18,5))\n","for index, (image, prediction) in enumerate(images_and_predictions[:16]):\n","    plt.subplot(2, 8, index + 1)\n","    image = image.reshape(8, 8)\n","    plt.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')\n","    plt.title('Prediction: %i' % prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"sMJ71QrHc5Ds","executionInfo":{"status":"ok","timestamp":1646189889792,"user_tz":-480,"elapsed":1442,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"8945c442-c17c-4f1b-aa74-e50218c3491a"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1296x360 with 16 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","execution_count":15,"metadata":{"id":"A1K0KfMK5iq7","colab":{"base_uri":"https://localhost:8080/","height":658},"executionInfo":{"status":"ok","timestamp":1646189891503,"user_tz":-480,"elapsed":1725,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"8d7ff9e7-3768-4fe7-fe9c-f0adfcdc62ad"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7feb788813d0>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["data = confusion_matrix(y_test, y_pred)\n","df_cm = pd.DataFrame(data, columns=np.unique(y_test), index = np.unique(y_test))\n","df_cm.index.name = 'Actual'\n","df_cm.columns.name = 'Predicted'\n","plt.figure(figsize = (10,10))\n","sns.set(font_scale=1.4)#for label size\n","plt.title('Confusion Matrix')\n","sns.heatmap(df_cm, annot=True,annot_kws={\"size\": 12})# font size"]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HNRjYsS0dtAC","executionInfo":{"status":"ok","timestamp":1646189891505,"user_tz":-480,"elapsed":36,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"c4c8d96a-ed47-434c-a432-ee210dfdb164"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        43\n","           1       1.00      1.00      1.00        35\n","           2       1.00      1.00      1.00        36\n","           3       1.00      1.00      1.00        41\n","           4       1.00      1.00      1.00        38\n","           5       0.97      0.97      0.97        30\n","           6       1.00      1.00      1.00        37\n","           7       1.00      0.97      0.99        37\n","           8       1.00      1.00      1.00        29\n","           9       0.94      0.97      0.96        34\n","\n","    accuracy                           0.99       360\n","   macro avg       0.99      0.99      0.99       360\n","weighted avg       0.99      0.99      0.99       360\n","\n"]}]},{"cell_type":"markdown","source":["Testing Neural Network with different tuning parameter leads to higher performance compared to result from previos section:"],"metadata":{"id":"xXG79DvUkxHc"}},{"cell_type":"code","source":["mlp = MLPClassifier(hidden_layer_sizes=(15,), activation='logistic', alpha=1e-4,\n","                    solver='sgd', tol=1e-4, random_state=1,\n","                    learning_rate_init=.1, verbose=True)\n","mlp.fit(x_train,y_train)\n","y_pred = mlp.predict(x_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ur8NPZ1HenoF","executionInfo":{"status":"ok","timestamp":1646189891508,"user_tz":-480,"elapsed":28,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"4e933f0c-ded5-4342-84e3-939c70fb9664"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Iteration 1, loss = 2.16298686\n","Iteration 2, loss = 1.69691164\n","Iteration 3, loss = 1.26595323\n","Iteration 4, loss = 0.88833018\n","Iteration 5, loss = 0.65109897\n","Iteration 6, loss = 0.48620804\n","Iteration 7, loss = 0.38712538\n","Iteration 8, loss = 0.31522816\n","Iteration 9, loss = 0.26020532\n","Iteration 10, loss = 0.22766428\n","Iteration 11, loss = 0.21098071\n","Iteration 12, loss = 0.17904216\n","Iteration 13, loss = 0.16576568\n","Iteration 14, loss = 0.14899943\n","Iteration 15, loss = 0.14561869\n","Iteration 16, loss = 0.14747115\n","Iteration 17, loss = 0.12278563\n","Iteration 18, loss = 0.12416616\n","Iteration 19, loss = 0.11161688\n","Iteration 20, loss = 0.10368608\n","Iteration 21, loss = 0.09907268\n","Iteration 22, loss = 0.09613993\n","Iteration 23, loss = 0.08961045\n","Iteration 24, loss = 0.08439748\n","Iteration 25, loss = 0.07966049\n","Iteration 26, loss = 0.08690602\n","Iteration 27, loss = 0.07961247\n","Iteration 28, loss = 0.07083865\n","Iteration 29, loss = 0.06851374\n","Iteration 30, loss = 0.06598268\n","Iteration 31, loss = 0.06353013\n","Iteration 32, loss = 0.06728526\n","Iteration 33, loss = 0.05967119\n","Iteration 34, loss = 0.05935680\n","Iteration 35, loss = 0.05669816\n","Iteration 36, loss = 0.05460783\n","Iteration 37, loss = 0.05251241\n","Iteration 38, loss = 0.05150746\n","Iteration 39, loss = 0.05168020\n","Iteration 40, loss = 0.05015221\n","Iteration 41, loss = 0.04790626\n","Iteration 42, loss = 0.04829165\n","Iteration 43, loss = 0.04617436\n","Iteration 44, loss = 0.04516270\n","Iteration 45, loss = 0.04572583\n","Iteration 46, loss = 0.04393186\n","Iteration 47, loss = 0.04207548\n","Iteration 48, loss = 0.04185315\n","Iteration 49, loss = 0.04020406\n","Iteration 50, loss = 0.03971208\n","Iteration 51, loss = 0.03976124\n","Iteration 52, loss = 0.03889839\n","Iteration 53, loss = 0.03816522\n","Iteration 54, loss = 0.03838326\n","Iteration 55, loss = 0.03671178\n","Iteration 56, loss = 0.03640841\n","Iteration 57, loss = 0.03577530\n","Iteration 58, loss = 0.03476814\n","Iteration 59, loss = 0.03458862\n","Iteration 60, loss = 0.03352524\n","Iteration 61, loss = 0.03290072\n","Iteration 62, loss = 0.03277645\n","Iteration 63, loss = 0.03209921\n","Iteration 64, loss = 0.03216943\n","Iteration 65, loss = 0.03172633\n","Iteration 66, loss = 0.03244442\n","Iteration 67, loss = 0.03035753\n","Iteration 68, loss = 0.03023846\n","Iteration 69, loss = 0.02979721\n","Iteration 70, loss = 0.02971006\n","Iteration 71, loss = 0.02884030\n","Iteration 72, loss = 0.02858370\n","Iteration 73, loss = 0.02857498\n","Iteration 74, loss = 0.02897656\n","Iteration 75, loss = 0.02767084\n","Iteration 76, loss = 0.02763762\n","Iteration 77, loss = 0.02746249\n","Iteration 78, loss = 0.02685231\n","Iteration 79, loss = 0.02664035\n","Iteration 80, loss = 0.02607039\n","Iteration 81, loss = 0.02559419\n","Iteration 82, loss = 0.02536215\n","Iteration 83, loss = 0.02562167\n","Iteration 84, loss = 0.02492463\n","Iteration 85, loss = 0.02459114\n","Iteration 86, loss = 0.02442024\n","Iteration 87, loss = 0.02375686\n","Iteration 88, loss = 0.02359891\n","Iteration 89, loss = 0.02329700\n","Iteration 90, loss = 0.02346677\n","Iteration 91, loss = 0.02289097\n","Iteration 92, loss = 0.02273272\n","Iteration 93, loss = 0.02255488\n","Iteration 94, loss = 0.02230550\n","Iteration 95, loss = 0.02297090\n","Iteration 96, loss = 0.02191420\n","Iteration 97, loss = 0.02202274\n","Iteration 98, loss = 0.02185517\n","Iteration 99, loss = 0.02154824\n","Iteration 100, loss = 0.02150543\n","Iteration 101, loss = 0.02085925\n","Iteration 102, loss = 0.02159160\n","Iteration 103, loss = 0.02060619\n","Iteration 104, loss = 0.02055236\n","Iteration 105, loss = 0.02129318\n","Iteration 106, loss = 0.02087092\n","Iteration 107, loss = 0.01972380\n","Iteration 108, loss = 0.01973925\n","Iteration 109, loss = 0.01970612\n","Iteration 110, loss = 0.01937736\n","Iteration 111, loss = 0.01924237\n","Iteration 112, loss = 0.01920570\n","Iteration 113, loss = 0.01912950\n","Iteration 114, loss = 0.01869024\n","Iteration 115, loss = 0.01873925\n","Iteration 116, loss = 0.01836859\n","Iteration 117, loss = 0.01825003\n","Iteration 118, loss = 0.01817171\n","Iteration 119, loss = 0.01823659\n","Iteration 120, loss = 0.01786545\n","Iteration 121, loss = 0.01784524\n","Iteration 122, loss = 0.01765453\n","Iteration 123, loss = 0.01743992\n","Iteration 124, loss = 0.01722996\n","Iteration 125, loss = 0.01708526\n","Iteration 126, loss = 0.01704398\n","Iteration 127, loss = 0.01703339\n","Iteration 128, loss = 0.01674837\n","Iteration 129, loss = 0.01671712\n","Iteration 130, loss = 0.01654047\n","Iteration 131, loss = 0.01645344\n","Iteration 132, loss = 0.01630197\n","Iteration 133, loss = 0.01621858\n","Iteration 134, loss = 0.01618606\n","Iteration 135, loss = 0.01604246\n","Iteration 136, loss = 0.01588894\n","Iteration 137, loss = 0.01562986\n","Iteration 138, loss = 0.01564112\n","Iteration 139, loss = 0.01554896\n","Iteration 140, loss = 0.01537963\n","Iteration 141, loss = 0.01550733\n","Iteration 142, loss = 0.01531674\n","Iteration 143, loss = 0.01521100\n","Iteration 144, loss = 0.01513924\n","Iteration 145, loss = 0.01497759\n","Iteration 146, loss = 0.01488618\n","Iteration 147, loss = 0.01479907\n","Iteration 148, loss = 0.01477484\n","Iteration 149, loss = 0.01539341\n","Iteration 150, loss = 0.01471583\n","Iteration 151, loss = 0.01460326\n","Iteration 152, loss = 0.01447002\n","Iteration 153, loss = 0.01437694\n","Iteration 154, loss = 0.01441953\n","Iteration 155, loss = 0.01431184\n","Iteration 156, loss = 0.01416930\n","Iteration 157, loss = 0.01424495\n","Iteration 158, loss = 0.01398280\n","Iteration 159, loss = 0.01394772\n","Iteration 160, loss = 0.01375419\n","Iteration 161, loss = 0.01380551\n","Iteration 162, loss = 0.01360386\n","Iteration 163, loss = 0.01350566\n","Iteration 164, loss = 0.01348361\n","Iteration 165, loss = 0.01337482\n","Iteration 166, loss = 0.01330158\n","Iteration 167, loss = 0.01317900\n","Iteration 168, loss = 0.01313127\n","Iteration 169, loss = 0.01308670\n","Iteration 170, loss = 0.01323927\n","Iteration 171, loss = 0.01294226\n","Iteration 172, loss = 0.01290072\n","Iteration 173, loss = 0.01287396\n","Iteration 174, loss = 0.01273819\n","Iteration 175, loss = 0.01263576\n","Iteration 176, loss = 0.01281420\n","Iteration 177, loss = 0.01248241\n","Iteration 178, loss = 0.01241697\n","Iteration 179, loss = 0.01236120\n","Iteration 180, loss = 0.01242306\n","Iteration 181, loss = 0.01227900\n","Iteration 182, loss = 0.01246789\n","Iteration 183, loss = 0.01230513\n","Iteration 184, loss = 0.01222195\n","Iteration 185, loss = 0.01212804\n","Iteration 186, loss = 0.01200047\n","Iteration 187, loss = 0.01192869\n","Iteration 188, loss = 0.01188601\n","Iteration 189, loss = 0.01184470\n","Iteration 190, loss = 0.01173949\n","Iteration 191, loss = 0.01167098\n","Iteration 192, loss = 0.01165210\n","Iteration 193, loss = 0.01164877\n","Iteration 194, loss = 0.01154165\n","Iteration 195, loss = 0.01149798\n","Iteration 196, loss = 0.01140259\n","Iteration 197, loss = 0.01135641\n","Iteration 198, loss = 0.01140862\n","Iteration 199, loss = 0.01133673\n","Iteration 200, loss = 0.01139951\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n","  ConvergenceWarning,\n"]}]},{"cell_type":"code","source":["images_and_predictions = list(zip(x_test,y_pred))\n","\n","plt.figure(figsize=(18,5))\n","for index, (image, prediction) in enumerate(images_and_predictions[:16]):\n","    plt.subplot(2, 8, index + 1)\n","    image = image.reshape(8, 8)\n","    plt.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')\n","    plt.title('Prediction: %i' % prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"l9J1Lt8rgYbl","executionInfo":{"status":"ok","timestamp":1646189894613,"user_tz":-480,"elapsed":3119,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"a2e3ac16-cd7c-4ca5-dade-97157c1e58fd"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1296x360 with 16 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U0kccD2QgcY-","executionInfo":{"status":"ok","timestamp":1646189894615,"user_tz":-480,"elapsed":32,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"22e5ea02-d2d7-493a-b653-98d077f62e55"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      0.95      0.98        43\n","           1       0.94      0.97      0.96        35\n","           2       1.00      0.97      0.99        36\n","           3       0.97      0.93      0.95        41\n","           4       0.97      0.97      0.97        38\n","           5       0.94      0.97      0.95        30\n","           6       0.95      1.00      0.97        37\n","           7       0.97      0.95      0.96        37\n","           8       0.93      0.86      0.89        29\n","           9       0.84      0.94      0.89        34\n","\n","    accuracy                           0.95       360\n","   macro avg       0.95      0.95      0.95       360\n","weighted avg       0.95      0.95      0.95       360\n","\n"]}]},{"cell_type":"code","source":["data = confusion_matrix(y_test, y_pred)\n","df_cm = pd.DataFrame(data, columns=np.unique(y_test), index = np.unique(y_test))\n","df_cm.index.name = 'Actual'\n","df_cm.columns.name = 'Predicted'\n","plt.figure(figsize = (10,10))\n","sns.set(font_scale=1.4)#for label size\n","plt.title('Confusion Matrix')\n","sns.heatmap(df_cm, annot=True,annot_kws={\"size\": 12})# font size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":658},"id":"96BEwPFogf5-","executionInfo":{"status":"ok","timestamp":1646189896152,"user_tz":-480,"elapsed":1561,"user":{"displayName":"Siti Hajar Zulkefly","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10256304481234512062"}},"outputId":"e4eef683-fd74-4c09-ccf5-f6d2a2d0eca2"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7feb75e17710>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{}}]}]}